hello()
"hello"
3+5[]
23*23
sqrt(15)
data = c(120, 124, 125, 125, 142, 130, 109, 103, 115)
summary(data)
varp <- function(x) {}
varp <- function(x) {
r <- var(x) * (length(x)-1) / length(x)
}
data <- c(10, 6, 9, 12, 8)
var(data)
varp(data)
varp <- function(x) {
r <- var(x) * (length(x)-1) / length(x)
r
}
varp(data)
a_uni <- c(60, 100, 50, 40, 50, 230, 120, 240, 200, 30)
b_uni <- c(50, 60, 40, 50, 100, 80, 30, 20, 100, 120)
hist(a_uni)
hist(b_uni)
mean(a_uni)
sd(a_uni)
mean(b_uni)
sd(b_uni)
a_uni_std <- (a_uni - mean(a_uni))/sd(a_uni)
a_uni_std
a_uni_std*10+50
b_uni_std <- (b_uni - mean(b_uni)) / sd(b_uni)
b_uni_std
b_uni_std * 10 + 50
study <- c(1, 3, 10, 12, 6, 3, 8, 4, 1, 5)
len(study)
length(study)
score <- c(20, 40, 100, 80, 50, 50, 70, 50, 10, 60)
length(score)
plot(study, score)
cor(study, score)
western <- c(1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0)
length(western)
sweet <- c(1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1)
length(sweet)
table(western, sweet)
cor(western, sweet)
sum(western)
sum(sweet)
cor(western, sweet)
western
sweet
cor(western, sweet)
cov(western, sweet)
w_h <- western - mean(western)
w_h
s_h <- sweet - mean(sweet)
s_h
w_h * s_h
sum(w_h * s_h)
set.seed(1)
dice6 <- ceiling(runif(n=6, min=0, max=6))
dice6
table(dice6)
p1 <- dnorm(x, mean=0, sd=1)
curve(drnom(x, mean=0, sd=1), from=-4, to=-4)
curve(dnorm(x, mean=0, sd=1), from=-4, to=-4)
curve(dnorm(x, mean=0, sd=1), from=-4, to=4)
curve(dnorm(x, mean=1, sd=1), add=TRUE)
curve(dnorm(x, mean=0, sd=2), add=TRUE)
rnorm(n=5, mean=50, sd=10)
rnorm(n=5, mean=50, sd=10)
rnorm(n=5, mean=50, sd=10)
r_norm = rnorm(n=5, mean=50, sd=10)
hist(r_norm)
r_norm = rnorm(n=10000, mean=50, sd=10)
hist(r_norm)
data <- rnorm(n=10, mean=50, sd=10)
mean(data)
data <- rnorm(n=10, mean=50, sd=10)
mean(data)
data <- rnorm(n=10, mean=50, sd=10)
mean(data)
for(i in 1:10000) {
sample <- rnorm(n=10, mean=50, sd=10)
sample_mean[i] <- mean(sample)
}
sample_mean <- numeric(length=10000)
for(i in 1:10000) {
sample <- rnorm(n=10, mean=50, sd=10)
sample_mean[i] <- mean(sample)
}
hist(sample_mean)
under5 <- ifelse(abs(sample_mean-50)<=5, 1, 0)
table(under5)
mean(sample_mean)
var(sample_mean)
curve(dnorm(x, mean=50, sd=10), add=TRUE)
curve(dnorm(x, mean=50, sd=sqrt(10)), add=TRUE)
dnorm(50, mean=50, sd=10)
dnorm(50, mean=50, sd=sqrt(10))
hist(sample_mean, freq=FALSE)
curve(dnorm(x, mean=50, sd=sqrt(10)), add=TRUE)
sample_mean <- numeric(length=10000)
for(i in 1:10000) {
sample <- rnorm(n=100, mean=50, sd=10)
sample_mean[i] <- mean(sample)
}
hist(sample_mean, freq=FALSE)
var(sample_mean)
sample_var <- numeric(length=10000)
unbiased_var <- numeric(length=10000)
for(i in 1:10000) {
sample <- rnorm(n=10, mean=50, sd=10)
sample_var[i] <- mean((sample-mean(sample))^2)
unbiased_var[i] <- var(sample)
}
mean(sample_var)
mean(unbiased_var)
sd(sample_var)
sd(unbiased_var)
hist(sample_var, breaks=(0, 500, 10))
hist(sample_var, breaks=seq(0, 500, 10))
hist(unbiased_var, breaks=seq(0, 500, 10))
ovar100_svar <- ifelse(sample_var>=100, 1, 0)
ovar100_uvar <- ifelse(unbiased_var>=100, 1, 0)
table(over100_svar)
table(ovar100_svar)
table(ovar100_uvar)
ovar100_svar <- ifelse(sample_var>=200, 1, 0)
ovar100_uvar <- ifelse(unbiased_var>=200, 1, 0)
table(ovar100_svar)
table(ovar100_uvar)
mean(sqrt(unbiased_var))
sample_mean <- numeric(length=10000)
unbiased_median <- numeric(length=10000)
for(i in 1:10000) {
sample <- rnorm(n=10, mean=50, sd=10)
sample_mean[i] <- mean(sample)
sample_median[i] <- median(sample)
}
sample_mean <- numeric(length=10000)
sample_median <- numeric(length=10000)
for(i in 1:10000) {
sample <- rnorm(n=10, mean=50, sd=10)
sample_mean[i] <- mean(sample)
sample_median[i] <- median(sample)
}
hist(sample_mean)
hist(sample_median)
mean(sample_mean)
mean(sample_median)
sd(sample_mean)
sd(sample_median)
sample_mean <- numeric(length=5000)
for(i in 1:5000) {
sample <- rnorm(n=20, mean=50, sd=10)
sample_mean[i] <- mean(sample)
}
hist(sample_mean)
mean(sample_mean)
curve(dnorm(x, mean=50, sd=sqrt(20)), add=TRUE)
var(sample_mean)
10/sqrt(20)
hist(sample_mean, freq=FALSE)
curve(dnorm(x, mean=50, sd=10/sqrt(20), add=TRUE)
curve(dnorm(x, mean=50, sd=10/sqrt(20)), add=TRUE)
10/sqrt(20)
(10/sqrt(20))^2
sqrt(var(sample_mean))
10/sqrt(20)
create_sample <- function(n) {
sample_mean <- numeric(length=10000)
for(i in 1:10000) {
sample <- rnorm(n=n, mean=0, sd=1)
sample_mean[i] <- mean(sample)
}
sample_mean
}
s1 <- create_sample(n=1)
hist(h1)
hist(s1)
hist(s1, freq=FALSE)
s4 <- create_sample(n=4)
hist(s4)
s9 <- create_sample(n=9)
hist(s9)
s16 <- create_sample(n=16)
hist(s16)
s100 <- create_sample(n=100)
hist(s100)
s10000 <- create_sample(n=10000)
hist(s10000)
score <- c(13, 14, 7, 12, 10, 6, 8, 15, 4, 14, 9, 6, 10, 12, 5, 12, 8, 8, 12, 15)
z <- mean(score)-12
z <- z/(sqrt(10/20))
z
qnorm(0.025)
pnorm(z)
t <- (mean(score)-12)/sqrt(var(score)/length(score))
t
qt(0.025, 19)
pt(t)
pt(t, 19)
pt(t, 19)*2
t.test(score, mu=12)
s1 <- c(6, 10, 6, 10, 5, 3, 5, 9, 3, 3, 11, 6, 11, 9, 7, 5, 8, 7, 7, 9)
s2 <- c(10, 13, 8, 15, 8, 6, 9, 10, 7, 3, 18, 14, 11, 12, 5, 7, 12, 7, 7)
s1
s2
cor(s1, s2)
s2 <- c(10, 13, 8, 15, 8, 6, 9, 10, 7, 3, 18, 14, 11, 12, 5, 7, 12, 7, 7, 18)
cor(s1, s2)
r <- cor(s1, s2)
t <- r*sqrt(length(s1)-2)/sqrt(1-r^2)
t
qt(t, 18)
t
dt(t)
dt(t, 18)
qt(0.025, 18)
pt(t, 18)
t
pt(t, 18)
pt(t, 18, lower.tail = FALSE)
pt(t, 18, lower.tail = FALSE)*2
cor.test(s1, s2)
height <- c(165, 150, 170, 168, 159, 170, 167, 178, 155, 159, 161, 162, 166, 171, 155, 160, 168, 172, 155, 167)
length(height)
t.test(height, mu=170)
j <- c(60, 40, 30, 70, 55)
s <- c(80, 25, 35, 70, 50)
cor.test(j, s)
plot(j, s)
j2 <- rep(j, 2)
s2 <- rep(s, 2)
plot(j2, s2)
cor.test(j2, s2)
t <- numeric(length=10000)
sup <- 0
for(i in 1:10000){
sample1 <- rnorm(n=10, mean=0, sd=1)
sample2 <- rnorm(n=20, mean=0.5, sd=1)
result <- t.test(sample1, sample2, var.equal=TRUE)
t[i] <- result[[1]]
sup <- sup + ifelse(result[[3]]<0.05, 1, 0)
}
sup
t
t.test(sample1, sample2)
hist(t)
mean(t)
t <- numeric(length=10000)
sup <- 0
for(i in 1:10000){
sample1 <- rnorm(n=10, mean=0, sd=1)
sample2 <- rnorm(n=10, mean=0.5, sd=1)
result <- t.test(sample1, sample2, var.equal=TRUE)
t[i] <- result[[1]]
sup <- sup + ifelse(result[[3]]<0.05, 1, 0)
}
pt(mean(t), 18)
sup
t <- numeric(length=10000)
sup <- 0
for(i in 1:10000){
sample1 <- rnorm(n=10, mean=0, sd=1)
sample2 <- rnorm(n=10, mean=0.5, sd=1)
result <- t.test(sample1, sample2, var.equal=TRUE)
t[i] <- result[[1]]
sup <- sup + ifelse(result[[3]]<0.05, 1, 0)
}
sup
x <- runif(100000)
y <- x^2
hist(y, prob=TRUE)
curve(1/2*sqrt(x), 0, 1, add=TRUE)
curve(1/(2*sqrt(x)), 0, 1, add=TRUE)
x <- runif(100000)
y <- sqrt(x)
hist(y, prob=TRUE)
curve(2x, 0, 1, add=TRUE)
curve(2*x, 0, 1, add=TRUE)
x <- runif(100000)
y <- -log(1-x)
x <- runif(100000)
y <- -log(1-x)
hist(y, prob=TRUE)
curve((1-(1/exp(x))), 0, 1, add=TRUE)
curve((1-exp(-x)), 0, 1, add=TRUE)
curve((1-exp(-x)), 0, 0, add=TRUE)
curve((1-exp(-x)), 0, 0, add=TRUE)
curve((1-exp(-x)), 0, 10, add=TRUE)
curve(exp(-x), 0, 10, add=TRUE)
x <- runif(100000)
y <- sin(x)
hist(y, prob=TRUE)
y <- sin(x, -pi/2 pi/2)
y <- sin(x)
hist(y, -pi/2 pi/2 prob=TRUE)
hist(y, -pi/2 pi/2, prob=TRUE)
hist(y, -pi/2, pi/2, prob=TRUE)
hist(y, min=-pi/2, max=pi/2, prob=TRUE)
hist(y, prob=TRUE)
y <- sin(x)
hist(y, prob=TRUE)
curve(1/(pi*sqrt(1-x^2)), -1, 1, add=TRUE)
x <- runif(100000, min=-pi/2, max=pi/2)
y <- sin(x)
hist(y, prob=TRUE)
curve(1/(pi*sqrt(1-x^2)), -1, 1, add=TRUE)
dbinorm(7, 10, p=0.6)
dbinom(7, 10, p=0.6)
dbinom(7, 10, p=0.6)
dbinom?
?dbinom
dbinom(c(1, 5, 8), 10, p=0.6)
dbinom(c(2, 5, 8), 10, p=0.6)
pbinom(3, 10, p=0.6)
pbinom(5, 10, p=0.6)
pbinom(6, 10, p=0.6)
pbinom(9, 10, p=0.6)
pbinom(3, 10, p=0.6)
sum(dbinom(1:3, 10, p=0.6))
pbinom(3, 10, p=0.6)
sum(dbinom(1:3, 10, p=0.6))
sum(dbinom(1:3, 10, p=0.6))
dbinom(0:10, 10, 0.5)
barplot(dbinom(0:10, 10, 0.5), names=0:10, xlab="x")
barplot(dbinom(0:10, 10, 0.6), names=0:10, xlab="x")
barplot(dbinom(0:10, 10, 0.7), names=0:10, xlab="x")
barplot(dbinom(0:10, 10, 0.8), names=0:10, xlab="x")
barplot(dbinom(0:10, 10, 0.65), names=0:10, xlab="x")
# ポワソン分布
barplot(dpois(0:10, lambda=2.3), names=0:10, xlab="x")
years <- c(1, 6, 6, 8, 5, 7, 0, 1, 0)
m <- sum((0:8)*years)/sum(years)
m
data <- data.frame(years, sum(years)*dpois(0:8, lambda=m))
data
barplot(t(data), col=c("black", "gray"), beside=TRUE, names.arg=0:8, xlab="number of accidents")
legend("topleft", legend=c("real", "theory"), bg="transparent", fill=c("black", "gray"))
# 幾何分布
first <- rgeom(100000, prob=1/6)
first
hist(first, prob=TRUE)
max(first)
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
# 負の二項分布
k <- 0:40
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
dpois(0:10, lambda=3)
barplot(dpois(k, lambda=3), names=k, xlab="x")
barplot(dpois(k, lambda=3), names=k, xlab="x")
k <- 0:10
barplot(dpois(k, lambda=3), names=k, xlab="x")
k <- 0:10
barplot(dpois(k, lambda=3), names=k, xlab="x")
barplot(dpois(k, lambda=5), names=k, xlab="x")
barplot(dpois(k, lambda=10), names=k, xlab="x")
k <- 0:40
barplot(dpois(k, lambda=10), names=k, xlab="x")
barplot(dpois(k, lambda=2), names=k, xlab="x")
barplot(dpois(k, lambda=20), names=k, xlab="x")
k <- 0:30
barplot(dpois(k, lambda=15), names=k, xlab="x")
barplot(dpois(k, lambda=10), names=k, xlab="x")
barplot(dpois(k, lambda=5), names=k, xlab="x")
max(dpois(k, lamda=5))
max(dpois(k, lambda=5))
max(dpois(k, lambda=5))
dpois(k, lambda=5)
k <- 0:20
barplot(dpois(k, lambda=5), names=k, xlab="x")
dpois(k, lambda=5)
k <- 0:40
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=5, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=8, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.1), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.05), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.8), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=10, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=1000, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=50, prob=0.9), names.arg=k)
k <- 0:40
barplot(dnbinom(k, size=50, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=20, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=50, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=100, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=80, prob=0.9), names.arg=k)
barplot(dnbinom(k, size=80, prob=0.8), names.arg=k)
barplot(dnbinom(k, size=5, prob=0.8), names.arg=k)
barplot(dnbinom(k, size=5, prob=0.6), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.6), names.arg=k)
barplot(dnbinom(k, size=10, prob=0.6), names.arg=k)
# 正規分布
curve(dnorm(x, mean=5, sd=1), 1, 9, type="1")
# 正規分布
curve(dnorm(x, mean=5, sd=1), 1, 9, type="l")
1-pnorm(9, mean=8, sd=2)
curve(dnorm(x, mean=10, sd=sqrt(20*0.5*(1-0.5))), 0, 20, xlab="x", ylab="", axes=FALSE)
plot(k, dnorm(0:20, 20, prob=0.5), xlab="", ylab="")
k <- 0:20
plot(k, dnorm(k, 20, prob=0.5), xlab="", ylab="")
plot(k, dnorm(k, 20, prob=0.5), xlab="", ylab="")
plot(k, dbinom(k, 20, prob=0.5), xlab="", ylab="")
par(new=TRUE)
curve(dnorm(x, mean=10, sd=sqrt(20*0.5*(1-0.5))), 0, 20, xlab="x", ylab="", axes=FALSE)
# 対数正規分布
curve(dlnorm(x, meanlog=1, sdlog=1), 0, 10, type="l")
# 指数分布
curve(dexp(x, rate=2))
n <- 10^3
r <- rexp(n, rate=2.3)
x <- 0
xnum <- 0
count <- 0
time <- 0
for(i in 1:n){}
for(i in 1:n){}
for(i in 1:n){
time <- time + r[i]
if(time < 1) count <- count + 1
else {
x[num] <- count
xnum <- xnum + 1
time <- 0
count <- 0
}
}
for(i in 1:n){
time <- time + r[i]
if(time < 1) count <- count + 1
else {
x[xnum] <- count
xnum <- xnum + 1
time <- 0
count <- 0
}
}
barplot(table(x)/enum)
barplot(table(x)/xnum)
# 指数分布
curve(dexp(x, rate=2.3))
plot(x(0, 150), c(0, 1), type="n", axes=FALSE, xlab="", ylab="")
plot(c(0, 150), c(0, 1), type="n", axes=FALSE, xlab="", ylab="")
plot(c(0, 150), c(0, 1), type="n", axes=FALSE, xlab="", ylab="")
axis(1)
n <- 50
r <- rexp(n, rate=0.5)
pos <- numeric(n)
for(i in 1:n) pos[i] <- sum(r[1:j])
for(i in 1:n) pos[i] <- sum(r[1:i])
pos
segments(pos, 0.2, pos, 0.8)
# コーシー分布
x <- seq(-3, 5, 0.1)
curve(dcauchy(x, location=1, scale=2), -3.5)
curve(dcauchy(x, location=1, scale=2), -3, 5)
# ワイブル分布
x <- seq(0, 5, by=0.01)
curve(dweibull(x, shape=5, scale=3), 0, 5)
# 対数正規分布を自作
rlognormal <- function(nsize=10, mean=1, sd=1) {
a <- log(1+sd^2/mean^2)
mean_log <- log(mean) - 0.5*a
sd_log <- sqrt(a)
return(rlnorm(nsize, meanlog=mean_log, sdlog=sd_log))
}
rlognormal()
x <- rlognormal(10000, mean=10, sd=3)
hist(x, prob=TRUE)
